{"version":3,"sources":["img/microphone.svg","img/refreshBG.svg","img/bg3.png","GlobalStyle.js","config.js","fetch/index.js","components/Header/styled.js","components/Header/Select/styled.js","components/Header/Select/index.jsx","components/Header/Toggler/styled.js","components/Header/Toggler/index.jsx","components/Header/index.jsx","speaker/index.js","components/Geolocation/startMap.js","components/Geolocation/styled.js","components/Geolocation/index.jsx","components/Slider/styled.js","components/Slider/index.jsx","components/Loader/index.js","components/WeatherInfo/styled.js","components/WeatherInfo/index.jsx","components/Main/styled.js","components/Main/date.js","components/Main/index.jsx","components/styledApp.js","components/App.jsx","theme.js","i18n/i18n.js","index.js"],"names":["module","exports","createGlobalStyle","theme","fonts","WHITE","getEnvironmentVar","kay","fylKey","process","Error","config","myGeolocation","openweathermapKey","weatherbitHourlyUrl","weatherbitDailyUrl","unsplashUrl","forwardUrl","reverseUrl","token","translate","console","log","myFetch","url","a","type","fetch","answer","json","data","blob","src","URL","createObjectURL","error","getTranslation","setTLocation","location","lng","localStorage","text","getMyGeolocation","setGeoData","loc","split","arrLoc","lat","transformWeatherData","todayWeather","sixteenDayWeather","weather","then","resolve","appTemp","app_temp","temp","rh","code","icon","windSpd","wind_spd","newData","slice","map","item","date","valid_date","fifteenWeather","getWeather","setWeather","lang","url2","ArrFetch","Promise","all","getBGImage","setBG","imgData","urls","regular","getOpencageData","isSearch","region","geoData","language","getCity","city","join","results","geoAnswer","geometry","annotations","DMS","offsetSec","timezone","offset_sec","components","county","town","village","state","country","StyledHeader","styled","header","Container","div","ButtonGroup","RefreshButton","button","size","COMMON","refreshBG","Input","input","DARKLY","MicrophoneImg","svg","microphone","SearchButton","Select","select","Option","option","props","i18n","useTranslation","defaultValue","onChange","value","target","changeLanguage","defaultProps","ToggleGroup","ToggleItem","Radio","Label","label","htmlFor","Toggle","setIsCelsius","onClick","id","name","defaultChecked","Header","setBgImage","setIsSearch","setRegion","refInput","useRef","submitBtn","useState","isFetch","setIsFetch","speaker","setSpeaker","t","useEffect","current","recognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","maxAlternatives","onerror","event","onresult","last","length","sayWord","transcript","click","speak","handleRefresh","useCallback","F","as","onSubmit","e","preventDefault","ref","placeholder","start","startMap","mapboxgl","accessToken","Map","container","style","zoom","logoPosition","attributionControl","GeoBlock","Coordinate","p","Geolocation","setMap","mapContainer","setCenter","Marker","setLngLat","addTo","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","memo","WeatherCard","CardBody","Temperature","span","Day","WeatherImg","img","SimpleSlider","isCelsius","refSlider","slickGoTo","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","index","currentTemp","DayDate","Date","day","getDay","StringDate","getDate","getMonth","getFullYear","key","Math","round","CustomSlide","LocationName","h1","h3","WeatherBox","TodayContainer","TodayTemperature","TodayWeather","Span","WeatherInfo","wether","tLocation","currentAppTemp","currentLocation","today","numDay","month","year","time","Main","main","MainContainer","actualDate","now","getTimezoneOffset","Clock","dateNow","bate","toLocaleString","substr","trim","tick","this","str","hh","mm","ss","newTime","num","setDate","clock","setClock","timer","setInterval","clearInterval","opasityFrames","keyframes","bgImage","bg3","App","serWeather","wait","resources","ru","translation","en","by","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","keySeparator","Loader","className","ReactDOM","render","GlobalStyle","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.a14ae42a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/microphone.6cc46d55.svg\";","module.exports = __webpack_public_path__ + \"static/media/refreshBG.be8d82ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.13df8a3d.png\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  #root {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fonts};\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 22px;   \r\n    color: ${({ theme }) => theme.WHITE};\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 100vh;\r\n  }\r\n  @media (max-width: 475px) {\r\n    #root {\r\n      font-size: 18px; \r\n    }\r\n  }\r\n`;\r\n","const getEnvironmentVar = (kay) => {\n  const fylKey = `REACT_APP_${kay}`;\n  if (fylKey in process.env) {\n    return process.env[fylKey];\n  }\n  throw new Error(\"no key in the evt\");\n};\n\nconst config = {\n  myGeolocation: getEnvironmentVar(\"MY_GEOLOCATION\"),\n  openweathermapKey: getEnvironmentVar(\"OPENWEATHERMAP_KEY\"),\n  weatherbitHourlyUrl: getEnvironmentVar(\"WEATHERBIT_HOURLY_URL\"),\n  weatherbitDailyUrl: getEnvironmentVar(\"WEATHERBIT_DAILY_URL\"),\n  unsplashUrl: getEnvironmentVar(\"UNSPLASH_URL\"),\n  forwardUrl: getEnvironmentVar(\"FORWARD_URL\"),\n  reverseUrl: getEnvironmentVar(\"REVERSE_URL\"),\n  token: getEnvironmentVar(\"MAPBOXGL_TOKEN\"),\n  translate: getEnvironmentVar(\"TRANSLATE\"),\n};\n\nexport default config;\n","/* eslint-disable no-console */\nimport config from \"config\";\n\nconsole.log(\"config.myGeolocation: \", config.myGeolocation);\nconst myFetch = async (url, type = \"json\") => {\n  try {\n    const answer = await fetch(url);\n    if (type === \"json\") {\n      const data = await answer.json();\n      return data;\n    }\n    if (type === \"blob\") {\n      const blob = await answer.blob();\n      const src = URL.createObjectURL(blob);\n      return src;\n    }\n    throw new Error(\"This type is not supported\");\n  } catch (e) {\n    console.error(\"e: \", e);\n    return null;\n  }\n};\n\nexport const getTranslation = async ({ location }, setTLocation) => {\n  const lng = localStorage.lng || \"en\";\n  const url = `${config.translate}&text=${location}&lang=${\n    lng === \"by\" ? \"be\" : lng\n  }`;\n  try {\n    const data = await myFetch(url);\n    console.log(\"data: \", data);\n    console.log(\"data.text[0]: \", data.text[0]);\n    setTLocation(data.text[0]);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMyGeolocation = async (setGeoData) => {\n  const data = await myFetch(config.myGeolocation);\n\n  console.log(\"dataFetch: \", data);\n  const { loc } = data;\n  const arrLoc = await loc.split(\",\");\n\n  setGeoData({ lat: arrLoc[0], lng: arrLoc[1] });\n};\n\nconst transformWeatherData = ([todayWeather, sixteenDayWeather]) => {\n  const weather = {};\n  todayWeather.then((resolve) => {\n    const {\n      data: [\n        {\n          app_temp: appTemp,\n          temp,\n          rh,\n          weather: { code, icon },\n          wind_spd: windSpd,\n        },\n      ],\n    } = resolve;\n    weather.todayWeather = { appTemp, temp, rh, code, icon, windSpd };\n  });\n  sixteenDayWeather.then((resolve) => {\n    const { data } = resolve;\n    const newData = data.slice(1).map((item) => {\n      const {\n        temp,\n        weather: { icon },\n        valid_date: date,\n      } = item;\n      return { temp, icon, date };\n    });\n    weather.fifteenWeather = newData;\n  });\n\n  return weather;\n};\n\nexport const getWeather = async ({ lat, lng }, setWeather) => {\n  if (!lat && !lng) {\n    return;\n  }\n  const lang = localStorage.lng || \"en\";\n  const url = `${config.weatherbitHourlyUrl}&lat=${lat}&lon=${lng}&lang=${lang}&hours=24`;\n  const url2 = `${config.weatherbitDailyUrl}&lat=${lat}&lon=${lng}&lang=${lang}`;\n  const ArrFetch = [myFetch(url), myFetch(url2)];\n  Promise.all(ArrFetch);\n\n  setWeather(transformWeatherData(ArrFetch));\n};\n\nexport const getBGImage = async ({ location }, setBG) => {\n  if (!location) {\n    return;\n  }\n  const url = `${config.unsplashUrl}{${location} city}`;\n\n  const imgData = await myFetch(url);\n  console.log(\"img: \", imgData);\n  if (imgData) {\n    const { urls } = imgData;\n\n    const src = await myFetch(urls.regular, \"blob\");\n\n    setBG(src);\n  }\n};\n\nexport const getOpencageData = async (\n  isSearch,\n  region,\n  geoData,\n  setGeoData,\n  setTLocation\n) => {\n  const language = localStorage.lng || \"en\";\n  const getCity = (city) => (city ? city.split(\" \").join(\"%20\") : \"\");\n  const forwardUrl = `${config.forwardUrl}${getCity(\n    region\n  )}&language=${language}`;\n  const reverseUrl = `${config.reverseUrl}${geoData.lat}+${geoData.lng}&language=${language}`;\n  const url = isSearch ? forwardUrl : reverseUrl;\n  const answer = await myFetch(url);\n\n  const [geoAnswer] = answer.results;\n  if (!geoAnswer) {\n    return;\n  }\n\n  const {\n    geometry: { lng, lat },\n    annotations: {\n      DMS,\n      timezone: { offset_sec: offsetSec },\n    },\n    components: { city, county, town, village, state, country },\n  } = geoAnswer;\n  const location = `${city || town || county || village || \"\"}, ${\n    state || \"\"\n  } ${country}`;\n  if (isSearch) {\n    setGeoData({\n      lng,\n      lat,\n      DMS,\n      location,\n      offsetSec,\n    });\n  } else {\n    setGeoData({ ...geoData, DMS, location, offsetSec });\n  }\n  setTLocation(\"\");\n};\n","import styled from 'styled-components';\r\n\r\nimport microphone from 'img/microphone.svg';\r\nimport refreshBG from 'img/refreshBG.svg';\r\n\r\nexport const StyledHeader = styled.header`\r\n  width: 100%;\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 1440px;\r\n  padding: 0 90px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (max-width: 1180px) {\r\n    padding: 0 20px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 675px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  @media (max-width: 1024px) {\r\n    width: 600px;\r\n    justify-content: flex-start;\r\n  }\r\n  @media (max-width: 675px) {\r\n    width: 90vw;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const RefreshButton = styled.button`\r\n  width: ${({ theme }) => theme.size};\r\n  height: ${({ theme }) => theme.size};\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.COMMON};\r\n  background-image: url(${refreshBG});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border: none;\r\n  transition-duration: 0.5s;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transform: scale(0.9);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  box-sizing: border-box;\r\n  height: ${({ theme }) => theme.size};\r\n  width: 300px;\r\n  background-color: ${({ theme }) => theme.DARKLY};\r\n  font-family: ${({ theme }) => theme.fonts};\r\n  color: ${({ theme }) => theme.WHITE};\r\n  padding-left: 10px;\r\n  border-width: 2px;\r\n  border-style: inset;\r\n  border-color: rgb(118, 118, 118);\r\n  border-image: initial;\r\n  border-right: none;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.WHITE};\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 600px;\r\n  }\r\n  @media (max-width: 675px) {\r\n    width: 78vw;\r\n  }\r\n  @media (max-width: 375px) {\r\n    width: 70vw;\r\n  }\r\n`;\r\n\r\nexport const MicrophoneImg = styled.svg`\r\n  box-sizing: border-box;\r\n  height: ${({ theme }) => theme.size};\r\n  width: ${({ theme }) => theme.size};\r\n  background-color: ${({ theme }) => theme.DARKLY};\r\n  background-image: url(${microphone});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-width: 2px;\r\n  border-style: inset;\r\n  border-color: rgb(118, 118, 118);\r\n  border-image: initial;\r\n  border-left: none;\r\n  transition-duration: 0.5s;\r\n  color: white;\r\n  &:hover {\r\n    background-size: 18px auto;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  width: 100px;\r\n  height: ${({ theme }) => theme.size};\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.COMMON};\r\n  color: ${({ theme }) => theme.WHITE};\r\n  font-family: ${({ theme }) => theme.fonts};\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  text-transform: uppercase;\r\n  transition-duration: 0.5s;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transform: scale(0.9);\r\n    cursor: pointer;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\n\nexport const Select = styled.select`\n  width: 71px;\n  height: ${({ theme }) => theme.size};\n  margin-left: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: ${({ theme }) => theme.COMMON};\n  font-family: ${({ theme }) => theme.fonts};\n  font-style: normal;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 17px;\n  text-transform: uppercase;\n  padding-left: 10px;\n  color: ${({ theme }) => theme.WHITE};\n  transition-duration: 0.5s;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    transform: scale(0.9);\n    cursor: pointer;\n  }\n`;\n\nexport const Option = styled.option`\n  height: ${(props) => props.theme.size};\n  background-color: ${({ theme }) => theme.DARKLY};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nimport {getTranslation} from 'fetch'\r\n\r\nimport * as S from './styled';\r\n\r\nconst Select = ({ geoData, setTLocation }) => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const changeLanguage = ({ target: { value } }) => {\r\n    i18n.changeLanguage(value);\r\n    localStorage.lng = value;\r\n    getTranslation(geoData, setTLocation);\r\n  };\r\n  return (\r\n    <S.Select defaultValue={localStorage.lng} onChange={changeLanguage}>\r\n      <S.Option value=\"en\">EN</S.Option>\r\n      <S.Option value=\"ru\">RU</S.Option>\r\n      <S.Option value=\"by\">BY</S.Option>\r\n    </S.Select>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n\r\nSelect.defaultProps = {\r\n  geoData: null,\r\n}\r\n\r\nSelect.propTypes = {\r\n  setTLocation: PropTypes.func.isRequired,\r\n  geoData: PropTypes.shape({\r\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    DMS: PropTypes.shape({\r\n      lat: PropTypes.string,\r\n      lng: PropTypes.string,\r\n    }),\r\n    location: PropTypes.string,\r\n    offsetSec: PropTypes.number,\r\n  }),\r\n};","import styled from 'styled-components';\r\n\r\n\r\nexport const ToggleGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  margin-left: 10px;\r\n  height: ${({theme}) => theme.size};\r\n`;\r\n\r\nexport const ToggleItem = styled.div``;\r\n\r\nexport const Radio = styled.input`\r\n  display: none;\r\n  :checked + label {\r\n    background: ${({theme}) => theme.COMMON};\r\n    transform: scaleY(0.9);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${({theme}) => theme.size};\r\n  height: ${({theme}) => theme.size};\r\n  border: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  background: ${({theme}) => theme.DARKLY};\r\n  border-radius: ${(props) => (props.htmlFor === 'fid-1' ? '6px 0 0 6px' : '0 6px 6px 0')};\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  transition-duration: 0.5s;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport * as S from './styled';\r\n\r\nconst Toggle = ({setIsCelsius}) => {\r\n  const fahrenheitHandler = () => {\r\n    setIsCelsius(false);\r\n  }\r\n  const CelsiusHandler = () => {\r\n    setIsCelsius(true);\r\n  }\r\n  return (\r\n    <S.ToggleGroup>\r\n      <S.ToggleItem onClick={fahrenheitHandler}>\r\n        <S.Radio id=\"fid-1\" type=\"radio\" name=\"radio\" value=\"°F\" />\r\n        <S.Label htmlFor=\"fid-1\">°F</S.Label>\r\n      </S.ToggleItem>\r\n      <S.ToggleItem onClick={CelsiusHandler}>\r\n        <S.Radio id=\"fid-2\" type=\"radio\" name=\"radio\" value=\"°С\" defaultChecked />\r\n        <S.Label htmlFor=\"fid-2\">°С</S.Label>\r\n      </S.ToggleItem>\r\n    </S.ToggleGroup>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  setIsCelsius: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { useCallback, useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport speak from 'speaker';\r\n\r\nimport * as F from 'fetch';\r\n\r\nimport * as S from './styled';\r\nimport Select from './Select';\r\nimport Toggle from './Toggler';\r\n\r\nconst Header = ({ setBgImage, geoData, setIsSearch, setRegion, setIsCelsius, setTLocation }) => {\r\n  const refInput = useRef(null);\r\n  const submitBtn = useRef(null);\r\n\r\n  const [isFetch, setIsFetch] = useState(false);\r\n  const [speaker, setSpeaker] = useState(null);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setSpeaker(speak(refInput, submitBtn));\r\n  }, []);\r\n\r\n  const handleRefresh = useCallback(async () => {\r\n    if (isFetch) {\r\n      return;\r\n    }\r\n    setIsFetch(true);\r\n    await F.getBGImage(geoData, setBgImage);\r\n    setIsFetch(false);\r\n  }, [isFetch, geoData, setBgImage]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      current: { value },\r\n    } = refInput;\r\n    setRegion(value);\r\n    setIsSearch(true);\r\n  };\r\n\r\n  const speakHandler = () => {\r\n    speaker.start();\r\n  };\r\n\r\n  return (\r\n    <S.StyledHeader>\r\n      <S.Container>\r\n        <S.ButtonGroup>\r\n          <S.RefreshButton type=\"button\" onClick={handleRefresh} />\r\n          <Select geoData={geoData} setTLocation={setTLocation} />\r\n          <Toggle setIsCelsius={setIsCelsius} />\r\n        </S.ButtonGroup>\r\n        <S.ButtonGroup as=\"form\" onSubmit={submitHandler}>\r\n          <S.Input ref={refInput} type=\"search\" name=\"search\" placeholder={t('placeholder')} />\r\n          <S.MicrophoneImg onClick={speakHandler} />\r\n          <S.SearchButton ref={submitBtn} type=\"submit\">\r\n            {t('search')}\r\n          </S.SearchButton>\r\n        </S.ButtonGroup>\r\n      </S.Container>\r\n    </S.StyledHeader>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  geoData: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  setBgImage: PropTypes.func.isRequired,\r\n  setIsSearch: PropTypes.func.isRequired,\r\n  setRegion: PropTypes.func.isRequired,\r\n  setIsCelsius: PropTypes.func.isRequired,\r\n  setTLocation: PropTypes.func.isRequired,\r\n  geoData: PropTypes.shape({\r\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    DMS: PropTypes.shape({\r\n      lat: PropTypes.string,\r\n      lng: PropTypes.string,\r\n    }),\r\n    location: PropTypes.string,\r\n    offsetSec: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Header;\r\n","export default function speak({current: input}, {current: submitBtn}) {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n  // После того как слово принято прекращаем прослушивание\n  recognition.continuous = false;\n  // Указываем язык\n  //   recognition.lang = 'en-US';\n  // разрешаем/запрещаем выводить промежуточный результат\n  recognition.interimResults = false;\n  // Указываем число вариантов что мог \"услышать\" микрофон\n  recognition.maxAlternatives = 1;\n  recognition.onerror = (event) => {\n    // info.textContent = (`Error occurred in recognition: ${event.error}`);\n    console.log(event.error);\n  };\n\n  recognition.onresult = (event) => {\n    const last = event.results.length - 1;\n    const sayWord = event.results[last][0].transcript;\n    let { value } = input;\n    value = sayWord;\n    submitBtn.click();\n  };\n  return recognition;\n}\n","import mapboxgl from \"mapbox-gl\";\nimport config from \"config\";\n\nconst startMap = (lat, lng, { current }) => {\n  mapboxgl.accessToken = config.token;\n  const map = new mapboxgl.Map({\n    container: current, // container id\n    style: \"mapbox://styles/mapbox/outdoors-v11\",\n    zoom: 9.2, // starting zoom\n    logoPosition: \"top-left\",\n    attributionControl: false,\n  });\n  return map;\n};\n\nexport default startMap;\n","import styled from \"styled-components\";\n\nexport const GeoBlock = styled.div`\n  width: 375px;\n  margin-top: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  @media (max-width: 475px) {\n    width: 90vw;\n  }\n`;\n\nexport const Map = styled.div`\n  width: 100%;\n  height: 400px;\n  border-radius: 30px 30px 0px 0px;\n  background-color: #fff;\n  clip-path: polygon(0 0, 100% 0, 100% 100%, 76% 88%, 0 87%);\n  @media (max-width: 475px) {\n    height: 100vw;\n  }\n`;\n\nexport const Coordinate = styled.p`\n  width: 330px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 30px;\n  text-align: right;\n  text-transform: capitalize;\n  @media (max-width: 375px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n","import React, { useEffect, useRef, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport startMap from './startMap';\r\nimport * as S from './styled';\r\n\r\nconst Geolocation = ({ geoData, setMap, map }) => {\r\n  const { DMS, lat, lng } = geoData;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const mapContainer = useRef(null);\r\n\r\n  useEffect(() => {\r\n      setMap(startMap(lat, lng, mapContainer));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      map.setCenter([`${lng}`, `${lat}`]);\r\n      new mapboxgl.Marker().setLngLat([lng, lat]).addTo(map);\r\n      map.addControl(\r\n        new mapboxgl.GeolocateControl({\r\n          positionOptions: {\r\n            enableHighAccuracy: false,\r\n          },\r\n          trackUserLocation: true,\r\n          showUserLocation: true,\r\n        })\r\n      );\r\n    }\r\n  }, [geoData, map]);\r\n\r\n  return (\r\n    <S.GeoBlock>\r\n      <S.Map id=\"map\" ref={mapContainer} />\r\n      <S.Coordinate>{`${t('lat')}: ${DMS.lat} ${t('lng')}: ${DMS.lng}`}</S.Coordinate>\r\n    </S.GeoBlock>\r\n  );\r\n};\r\n\r\nGeolocation.defaultProps = {\r\n  map: null,\r\n  geoData: null,\r\n};\r\n\r\nGeolocation.propTypes = {\r\n  map: PropTypes.shape({}),\r\n  setMap: PropTypes.func.isRequired,\r\n  geoData: PropTypes.shape({\r\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    DMS: PropTypes.shape({\r\n      lat: PropTypes.string,\r\n      lng: PropTypes.string,\r\n    }),\r\n    location: PropTypes.string,\r\n    offsetSec: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default memo(Geolocation);\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const WeatherCard = styled.div`\r\nwidows: 160px;\r\nheight: 110px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\ndisplay: flex;\r\n`;\r\n\r\nexport const Temperature = styled.span`\r\nfont-weight: 600;\r\nfont-size: 80px;\r\nline-height: 98px;\r\ntext-transform: uppercase;\r\nz-index: 2;\r\n`\r\n\r\nexport const Day = styled.span`\r\nline-height: 27px;\r\ntext-transform: uppercase;\r\n`\r\nexport const WeatherImg = styled.img`\r\nheight: 70px;\r\nposition: relative;\r\nleft: -10px;\r\nobject-fit: contain;\r\n`","import React, { useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport * as S from './styled';\r\nimport './slick.css';\r\nimport './slick-theme.css';\r\n\r\n\r\nconst CustomSlide = ({ temp, icon, date }, index, isCelsius) => {\r\n  const { t } = useTranslation();\r\n\r\n  const currentTemp = isCelsius ? temp : (temp * 9) / 5 + 35;\r\n\r\n  const DayDate = new Date(date);\r\n  const day = DayDate.getDay();\r\n  const StringDate = `${DayDate.getDate()}.${DayDate.getMonth() + 1}.${DayDate.getFullYear()}`;\r\n\r\n  return (\r\n    <S.WeatherCard key={index}>\r\n      <S.Day>{`${t(`day.${day}`)}`}</S.Day>\r\n      <br />\r\n      <S.Day>{StringDate}</S.Day>\r\n      <S.CardBody>\r\n        <S.Temperature>{`${Math.round(currentTemp)}°`}</S.Temperature>\r\n        <S.WeatherImg src={`https://www.weatherbit.io/static/img/icons/${icon}.png`} />\r\n      </S.CardBody>\r\n    </S.WeatherCard>\r\n  );\r\n};\r\n\r\nconst SimpleSlider = ({ fifteenWeather, isCelsius }) => {\r\n  const refSlider = useRef(null);\r\n  useEffect(() => {\r\n    refSlider.current.slickGoTo(0);\r\n  }, [fifteenWeather]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    responsive: [\r\n      {\r\n        breakpoint: 650,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 1,\r\n          dots: false,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 425,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          dots: false,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <Slider ref={refSlider} {...settings}>\r\n      {fifteenWeather.map((item, index) => CustomSlide(item, index, isCelsius))}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default SimpleSlider;\r\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  animation: spin 1s infinite linear;\n  border: solid 2vmin transparent;\n  border-radius: 50%;\n  border-right-color: #09f;\n  border-top-color: #09f;\n  box-sizing: border-box;\n  height: 20vmin;\n  left: calc(50% - 10vmin);\n  position: fixed;\n  top: calc(50% - 10vmin);\n  width: 20vmin;\n  z-index: 1;\n  &:before {\n    animation: spin 2s infinite linear;\n    border: solid 2vmin transparent;\n    border-radius: 50%;\n    border-right-color: #3cf;\n    border-top-color: #3cf;\n    box-sizing: border-box;\n    content: \"\";\n    height: 16vmin;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 16vmin;\n  }\n  &:after {\n    animation: spin 3s infinite linear;\n    border: solid 2vmin transparent;\n    border-radius: 50%;\n    border-right-color: #6ff;\n    border-top-color: #6ff;\n    box-sizing: border-box;\n    content: \"\";\n    height: 12vmin;\n    left: 2vmin;\n    position: absolute;\n    top: 2vmin;\n    width: 12vmin;\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const LocationName = styled.h1`\r\n  margin: 0;\r\n  margin-top: 60px;\r\n  max-width: 600px;\r\n  word-wrap: break-word;\r\n  @media (max-width: 1024px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Date = styled.h3`\r\n  margin: 0;\r\n  font-size: 1.1em;\r\n`;\r\n\r\nexport const WeatherBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TodayContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  width: 600px;\r\n  @media (max-width: 675px) {\r\n    justify-content: center;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 600px) {\r\n    align-items: flex-start;\r\n  }\r\n`;\r\nexport const TodayTemperature = styled.span`\r\n  font-size: 11rem;\r\n  @media (max-width: 600px) {\r\n    background-image: ${({ src }) => `url(${src})`};\r\n    background-repeat: no-repeat;\r\n    background-position: right bottom;\r\n  }\r\n`;\r\nexport const TodayWeather = styled.p`\r\n  margin: 0;\r\n  text-transform: uppercase;\r\n  width: 270px;\r\n  position: relative;\r\n  top: -30px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  text-transform: lowercase;\r\n`;\r\n\r\nexport const WeatherImg = styled.img`\r\n  height: 160px;\r\n  object-fit: cover;\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport SimpleSlider from 'components/Slider';\r\nimport Loader from 'components/Loader'\r\n\r\nimport * as S from './styled';\r\n\r\nconst WeatherInfo = ({ date, wether, geoData: { location }, isCelsius, tLocation }) => {\r\n  const { t } = useTranslation();\r\n \r\n  if (wether.todayWeather && date) {\r\n    const { todayWeather, fifteenWeather } = wether;\r\n    const { appTemp, temp, rh, code, icon, windSpd } = todayWeather;\r\n\r\n    const currentTemp = isCelsius ? temp : (temp * 9) / 5 + 35;\r\n    const currentAppTemp = isCelsius ? appTemp : (appTemp * 9) / 5 + 35;\r\n    const currentLocation = tLocation.length !== 0 ? tLocation : location;\r\n\r\n    const {\r\n      today: { day, numDay, month, year },\r\n      time,\r\n    } = date;\r\n    return (\r\n      <S.WeatherBox>\r\n        <S.LocationName>{currentLocation}</S.LocationName>\r\n        <S.Date>{`${t(`day.${day}`)} ${numDay} ${t(`month.${month}`)} ${year} ${time}`}</S.Date>\r\n        <S.TodayContainer>\r\n          <S.TodayTemperature src={`https://www.weatherbit.io/static/img/icons/${icon}.png`}>\r\n            {`${Math.round(currentTemp)}°`}\r\n          </S.TodayTemperature>\r\n          <div>\r\n            <S.WeatherImg src={`https://www.weatherbit.io/static/img/icons/${icon}.png`} />\r\n            <S.WeatherBox>\r\n              <S.TodayWeather>\r\n                {`${t(`wether.${code}`)}`}\r\n                <br />\r\n                {`${t('feel')} ${Math.round(currentAppTemp)}°`}\r\n                <br />\r\n                {`${t('wind')} ${Math.round(windSpd)}`}\r\n                <S.Span> m/s</S.Span>\r\n                <br />\r\n                {`${t('humidity')} ${rh}%`}\r\n              </S.TodayWeather>\r\n            </S.WeatherBox>\r\n          </div>\r\n        </S.TodayContainer>\r\n        <SimpleSlider fifteenWeather={fifteenWeather} isCelsius={isCelsius} />\r\n      </S.WeatherBox>\r\n    );\r\n  }\r\n  return <S.WeatherBox><Loader /></S.WeatherBox>;\r\n};\r\n\r\nWeatherInfo.defaultProps = {\r\n  date: null,\r\n  geoData: null,\r\n  wether: null,\r\n  tLocation: '',\r\n};\r\n\r\nWeatherInfo.propTypes = {\r\n  date: PropTypes.shape({\r\n    today: PropTypes.shape({\r\n      day: PropTypes.number,\r\n      numDay: PropTypes.number,\r\n      month: PropTypes.number,\r\n      year: PropTypes.number,\r\n    }),\r\n    time: PropTypes.string,\r\n  }),\r\n  wether: PropTypes.shape({\r\n    todayWeather: PropTypes.shape({\r\n      appTemp: PropTypes.number,\r\n      temp: PropTypes.number,\r\n      rh: PropTypes.number,\r\n      code: PropTypes.number,\r\n      icon: PropTypes.string,\r\n      windSpd: PropTypes.number,\r\n    }),\r\n    fifteenWeather: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        temp: PropTypes.number,\r\n        icon: PropTypes.string,\r\n        date: PropTypes.string,\r\n      })\r\n    ),\r\n  }),\r\n  geoData: PropTypes.shape({\r\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lng:  PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    DMS: PropTypes.shape({\r\n      lat: PropTypes.string,\r\n      lng: PropTypes.string,\r\n    }),\r\n    location: PropTypes.string,\r\n    offsetSec: PropTypes.number,\r\n  }),\r\n  isCelsius: PropTypes.bool.isRequired,\r\n  tLocation: PropTypes.string,\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import styled from 'styled-components';\r\nimport { Container } from 'components/Header/styled';\r\n\r\n\r\nexport const Main = styled.main``;\r\n\r\nexport const MainContainer = styled(Container)`\r\n`;","const actualDate = (offsetSec) => {\n  const MILLISECONDS = 1000;\n  const start = Date.now();\n  const dateNow = new Date(\n    start +\n      new Date().getTimezoneOffset() * 60 * MILLISECONDS +\n      offsetSec * MILLISECONDS\n  );\n  return dateNow;\n};\n\nconst Clock = (offsetSec) => {\n  const dateNow = actualDate(offsetSec);\n  const today = (bate) => {\n    return {\n      day: bate.getDay(),\n      numDay: bate.getDate(),\n      month: bate.getMonth(),\n      year: bate.getFullYear(),\n    };\n  };\n  const time = dateNow.toLocaleString().substr(12).trim();\n  return {\n    today: today(dateNow),\n    time,\n    tick() {\n      let [hh, mm, ss] = this.time.split(\":\").map((str) => +str);\n      ss += 1;\n      if (ss > 59) {\n        ss = 0;\n        mm += 1;\n      }\n      if (mm > 59) {\n        mm = 0;\n        hh += 1;\n      }\n      if (hh > 23) {\n        hh = 0;\n        this.today = today(actualDate(offsetSec));\n      }\n      const newTime = [hh, mm, ss]\n        .map((num) => (`${num}`.length === 1 ? `0${num}` : `${num}`))\n        .join(\":\");\n      this.time = newTime;\n      return { today: this.today, time: `${this.time}` };\n    },\n  };\n};\n\nexport default Clock;\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport Geolocation from 'components/Geolocation';\r\nimport WeatherInfo from 'components/WeatherInfo';\r\nimport Loader from 'components/Loader'\r\n\r\nimport * as S from './styled';\r\nimport Clock from './date';\r\n\r\n\r\nconst Main = ({ wether, geoData, map, setMap, isCelsius, tLocation }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [clock, setClock] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (geoData && geoData.offsetSec) {\r\n      setClock(Clock(geoData.offsetSec));\r\n    }\r\n  }, [geoData]);\r\n\r\n  useEffect(() => {\r\n    if (clock) {\r\n      const timer = setInterval(() => setDate(clock.tick()), 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [clock, date]);\r\n\r\n  if (geoData && wether && wether.todayWeather) {\r\n    return (\r\n      <S.Main>\r\n        <S.MainContainer>\r\n          <WeatherInfo date={date} wether={wether} geoData={geoData} isCelsius={isCelsius} tLocation={tLocation} />\r\n          <Geolocation geoData={geoData} setMap={setMap} map={map} />\r\n        </S.MainContainer>\r\n      </S.Main>\r\n    );\r\n  }\r\n  return (\r\n    <S.Main>\r\n      <S.MainContainer>\r\n        <Loader />\r\n      </S.MainContainer>\r\n    </S.Main>\r\n  );\r\n};\r\n\r\nMain.defaultProps = {\r\n  wether: null,\r\n  geoData: null,\r\n  map: null,\r\n  tLocation: '',\r\n};\r\n\r\nMain.propTypes = {\r\n  wether: PropTypes.shape({\r\n    todayWeather: PropTypes.shape({\r\n      appTemp: PropTypes.number,\r\n      temp: PropTypes.number,\r\n      rh: PropTypes.number,\r\n      code: PropTypes.number,\r\n      icon: PropTypes.string,\r\n      windSpd: PropTypes.number,\r\n    }),\r\n    fifteenWeather: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        temp: PropTypes.number,\r\n        icon: PropTypes.string,\r\n        date: PropTypes.string,\r\n      })\r\n    ),\r\n  }),\r\n  geoData: PropTypes.shape({\r\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    DMS: PropTypes.shape({\r\n      lat: PropTypes.string,\r\n      lng: PropTypes.string,\r\n    }),\r\n    location: PropTypes.string,\r\n    offsetSec: PropTypes.number,\r\n  }),\r\n  map: PropTypes.shape({}),\r\n  setMap: PropTypes.func.isRequired,\r\n  isCelsius: PropTypes.bool.isRequired,\r\n  tLocation: PropTypes.string,\r\n};\r\n\r\nexport default Main;\r\n","import styled, { keyframes } from \"styled-components\";\n\nimport bg3 from \"img/bg3.png\";\n\nconst opasityFrames = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n`;\n\nexport default styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  background-image: ${({ bgImage }) =>\n    `linear-gradient(180deg, rgba(8, 15, 26, 0.59) 0%, rgba(17, 17, 46, 0.46) 100%), url(${\n      bgImage || bg3\n    })`};\n  background-repeat: no-repeat;\n  background-size: cover;\n  animation-name: ${opasityFrames};\n  animation-duration: 2s;\n  animation-timing-function: ease;\n  animation-delay: 0s;\n  animation-iteration-count: 1;\n  animation-direction: normal;\n  animation-fill-mode: forwards;\n  animation-play-state: running;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from 'components/Header';\nimport Main from 'components/Main';\n\nimport * as F from 'fetch';\n\nimport StyledApp from './styledApp';\n\nconst App = () => {\n  const [isSearch, setIsSearch] = useState(false);\n  const [isCelsius, setIsCelsius] = useState(true);\n  const [isFetch, setIsFetch] = useState(false);\n  const [bgImage, setBgImage] = useState('');\n  const [region, setRegion] = useState('');\n  const [wether, serWeather] = useState(null);\n  const [map, setMap] = useState(null);\n  const [geoData, setGeoData] = useState(null);\n  const [tLocation, setTLocation] = useState('');\n\n  useEffect(() => {\n    F.getMyGeolocation(setGeoData);\n  }, []);\n\n  useEffect(() => {\n    if (isFetch) {\n      return;\n    }\n    if (geoData && geoData.lat) {\n      setIsFetch(true);\n      const wait = async () => {\n        await F.getOpencageData(isSearch, region, geoData, setGeoData, setTLocation);\n        setIsSearch(false);\n        setIsFetch(false);\n      };\n      wait();\n    }\n  }, [region, geoData]);\n\n  useEffect(() => {\n    if (geoData && geoData.location) {\n      F.getWeather(geoData, serWeather);\n      F.getBGImage(geoData, setBgImage);\n    }\n  }, [geoData]);\n\n  return (\n    <StyledApp bgImage={bgImage}>\n      <Header\n        setBgImage={setBgImage}\n        geoData={geoData}\n        setIsSearch={setIsSearch}\n        setRegion={setRegion}\n        setIsCelsius={setIsCelsius}\n        setTLocation={setTLocation}\n      />\n      <Main isCelsius={isCelsius} geoData={geoData} wether={wether} map={map} setMap={setMap} tLocation={tLocation} />\n    </StyledApp>\n  );\n};\n\nexport default App;\n","const COMMON = 'rgba(174, 181, 185, 0.5)';\r\nconst DARKLY = 'rgba(76, 82, 85, 0.4)';\r\nconst WHITE = '#FFFFFF';\r\n\r\nconst theme = {\r\n  COMMON,\r\n  DARKLY,\r\n  WHITE,\r\n  fonts: 'Montserrat, sans-serif',\r\n  size: '44px',\r\n};\r\n\r\nexport default theme;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n\r\n\r\nimport ru from 'locales/ru/translation.json';\r\nimport en from 'locales/en/translation.json';\r\nimport by from 'locales/by/translation.json';\r\n\r\nconst resources = {\r\n  ru: {\r\n    translation: ru,\r\n  },\r\n  en: {\r\n    translation: en,\r\n  },\r\n  by: {\r\n    translation: by,\r\n  },\r\n};\r\n\r\nconst lng = localStorage.lng ||'en';\r\n\r\nconst fallbackLng = ['ru', 'en', 'by']\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng,\r\n    fallbackLng,\r\n    debug: true,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    keySeparator: '.',\r\n    resources,\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport GlobalStyle from \"GlobalStyle\";\nimport App from \"components/App\";\nimport theme from \"theme\";\nimport \"i18n/i18n\";\n\nconst Loader = () => (\n  <div className=\"App\">\n    <div>loading...</div>\n  </div>\n);\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyle />\n    <Suspense fallback={<Loader />}>\n      <App />\n    </Suspense>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}